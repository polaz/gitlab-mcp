# Ruff configuration
target-version = "py313"
line-length = 88
indent-width = 4

[lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "PTH", # use pathlib
    "SIM", # simplify code
    "TD",  # todos
    "ERA", # eradicate commented out code
    "PD",  # pandas
    "NPY", # numpy
]

ignore = [
    "E501",  # Line length (handled by black)
]

# Allow fix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Exclude files and directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]

[lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__ files
"tests/*" = ["PLR2004"]   # Ignore magic numbers in tests

[lint.isort]
known-first-party = ["src"]
known-third-party = ["pydantic", "gitlab", "mcp"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true

[lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[lint.pydocstyle]
convention = "google"

[lint.pylint]
max-args = 7
max-statements = 30

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"